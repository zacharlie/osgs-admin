version: "3"

services:
  redis:
    image: redis:alpine3.14
    restart: always

  flower:
    image: mher/flower
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: always

  flask:
    image: webapp-flask
    build:
      args:
        TARGET: "${HOT_FLASK_APP_TARGET}"
        SOURCE: "${HOT_FLASK_APP_SOURCE}"
      context: .
      dockerfile: dockerfile-flask
    depends_on:
      - redis
    restart: always
    volumes:
      - "${HOT_FLASK_APP_SOURCE}:${HOT_FLASK_APP_TARGET}"

  workerOne:
    image: webapp-flask
    command: celery -A osgs_admin.tasks.celery worker -l INFO
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - flask
    restart: always
    volumes:
      - "${HOT_FLASK_APP_SOURCE}:${HOT_FLASK_APP_TARGET}"

  workerTwo:
    image: webapp-flask
    command: celery -A osgs_admin.tasks.celery worker -l INFO
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - flask
    restart: always
    volumes:
      - "${HOT_FLASK_APP_SOURCE}:${HOT_FLASK_APP_TARGET}"

  watchdog:
    image: webapp-watchdog
    build:
      args:
        TARGET: "${HOT_FLASK_APP_TARGET}"
      context: .
      dockerfile: dockerfile-watchdog
    depends_on:
      - flask
    restart: always
    volumes:
      - "${HOT_FLASK_APP_SOURCE}:${HOT_FLASK_APP_TARGET}"

  nginx:
    image: webapp-nginx
    build:
      context: .
      dockerfile: dockerfile-nginx
    ports:
      - 5000:80
    depends_on:
      - flask
    restart: always
